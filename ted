curl 'https://gateway.api.epa.vic.gov.au/environmentMonitoring/v1/sites?environmentalSegment=air'
    -H "Ocp-Apim-Subscription-Key: 1dc2f160a2a441af82171e3e01ca4f2f"

curl -XPUT -k 'https://127.0.0.1:9200/unemployment'\
   --header 'Content-Type: application/json'\
   --data '{
    "settings": {
        "index": {
            "number_of_shards": 3,
            "number_of_replicas": 1
        }
    },
    "mappings": {
        "properties": {
            "fid": {
                "type": "keyword"
            },
            "mar_11": {
                "type": "integer"
            },
            "mar_12": {
                "type": "integer"
            },
            "mar_13": {
                "type": "integer"
            },
            "mar_14": {
                "type": "integer"
            },
            "mar_15": {
                "type": "integer"
            },
            "mar_16": {
                "type": "integer"
            },
            "mar_17": {
                "type": "integer"
            },
            "jun_21": {
                "type": "integer"
            },
            "jun_20": {
                "type": "integer"
            },
            "mar_18": {
                "type": "integer"
            },
            "dec_19": {
                "type": "integer"
            },
            "mar_19": {
                "type": "integer"
            },
            "dec_18": {
                "type": "integer"
            },
            "sep_20": {
                "type": "integer"
            },
            "dec_15": {
                "type": "integer"
            },
            "dec_14": {
                "type": "integer"
            },
            "dec_17": {
                "type": "integer"
            },
            "dec_16": {
                "type": "integer"
            },
            "sep_14": {
                "type": "integer"
            },
            "sep_15": {
                "type": "integer"
            },
            "sep_16": {
                "type": "integer"
            },
            "sep_17": {
                "type": "integer"
            },
            "sep_11": {
                "type": "integer"
            },
            "sep_12": {
                "type": "integer"
            },
            "sep_13": {
                "type": "integer"
            },
            "dec_20": {
                "type": "integer"
            },
            "jun_19": {
                "type": "integer"
            },
            "sep_18": {
                "type": "integer"
            },
            "jun_15": {
                "type": "integer"
            },
            "sep_19": {
                "type": "integer"
            },
            "jun_16": {
                "type": "integer"
            },
            "mar_20": {
                "type": "integer"
            },
            "jun_17": {
                "type": "integer"
            },
            "jun_18": {
                "type": "integer"
            },
            "jun_14": {
                "type": "integer"
            },
            "jun_13": {
                "type": "integer"
            },
            "jun_12": {
                "type": "integer"
            },
            "jun_11": {
                "type": "integer"
            },
            "lga_code_2021_asgs": {
                "type": "integer"
            },
            "mar_21": {
                "type": "integer"
            },
            "lga_name_2021_asgs": {
                "type": "text"
            },
            "sep_21": {
                "type": "integer"
            },
            "dec_13": {
                "type": "integer"
            },
            "dec_12": {
                "type": "integer"
            },
            "dec_11": {
                "type": "integer"
            },
            "dec_10": {
                "type": "integer"
            }

        }
    }
}'\
   --user 'elastic:elastic' | jq '.'

(
   cd fission
   fission env create --name python39x --spec --image lmorandini/python39x:1.0.0 --builder fission/python-builder-3.9
 )  
 
 (
  cd fission
  fission function create --name addaffords --env python39x --code ./backend
)  


(
  cd fission
  fission route create --spec --name addafford --function addafford \
    --method POST \
    --url '/afford/{id}'
  )

(
  cd fission
  fission function create --name addUnemployment --spec --env python39x --code ./backend
)  
(
    cd fission
    fission timer create --name everyminute --spec --function harvestair --cron "@hourly"
)
(
  cd fission
  fission route create --spec --name addUnemployment --function addUnemployment \
    --method POST \
    --url '/unemployment/{id}'
  )

(
  cd fission
  
  fission function create --spec --name harvestair --env python39x --code ./functions/airmonitor/airmonitor.py --configmap air-const

)
curl -XPUT -k 'https://127.0.0.1:9200/asx'\
   --header 'Content-Type: application/json'\
   --data '{
    "settings": {
        "index": {
            "number_of_shards": 3,
            "number_of_replicas": 1
        }
    },
    "mappings": {
        "properties": {
            "Date": {
                "type": "date"
            },
            "Price": {
                "type": "float"
            },
            "Change %": {
                "type": "text"
            },
            "High": {
                "type": "float"
            },
            "Low": {
                "type": "float"
            }
        }
    }
}'\
--user 'elastic:elastic' | jq '.'



curl -XPUT -k 'https://127.0.0.1:9200/air' \
   --user 'elastic:elastic' \
   --header 'Content-Type: application/json' \
   --data '{
    "settings": {
        "index": {
            "number_of_shards": 3,
            "number_of_replicas": 1
        }
    },
    "mappings": {
        "properties": {
            "siteID": {
                "type": "text"
            },
            "siteType": {
                "type": "text"
            },
            "siteName": {
                "type": "text"
            },
            "until": {
                "type": "date"
            },
            "since": {
                "type": "date"
            },
            "healthParameter": {
                "type": "text"
            },
            "averageValue": {
                "type": "text"
            }
        }
    }
}'  | jq '.'

curl -XPUT -k 'https://127.0.0.1:9200/asx'\
   --header 'Content-Type: application/json'\
   --data '{
    "settings": {
        "index": {
            "number_of_shards": 3,
            "number_of_replicas": 1
        }
    },
    "mappings": {
        "properties": {
            "Date": {
                "type": "date"
            },
            "Change %": {
                "type": "text"
            },
            "Price": {
                "type": "float"
            },
            "High": {
                "type": "float"
            },
            "Low": {
                "type": "float"
            }
        }
    }
}'\
   --user 'elastic:elastic' | jq '.'

   fission spec apply --specdir fission/specs --wait
   kubectl port-forward service/router -n fission 9090:80
   kubectl port-forward service/elasticsearch-master -n elastic 9200:9200
   kubectl port-forward service/kibana-kibana -n elastic 5601:5601
   fission fn log -f --name addasx

   To run the frontend code calling fission function
   1. SSH Tunnel
   2. Port forwarding for k8s and its service(Open a new terminal for each, 3 in total)
   ``kubectl port-forward service/router -n fission 9090:80
   kubectl port-forward service/elasticsearch-master -n elastic 9200:9200
   kubectl port-forward service/kibana-kibana -n elastic 5601:5601``
   3. Run the python code

   To modify codes for fission function,I have already create spec for all existed fission functions.
   Run ``fission spec apply --specdir fission/specs --wait`` to apply the changes

   To add new fission function
   1. Create the function spec
   ``(
   cd fission
   fission function create --name <function-name> --spec --env python39x --code <path-to-python-file>
 )  ``
   2. create the router spec
``(
  cd fission
  fission route create --spec --name <router-name> --function <function-name> \
    --method <POST or GET> \
    --url '<url>'
  )``
  3. Apply the spec ``fission spec apply --specdir fission/specs --wait``

  Commly used command:
  - List all functions deployed: ``fission function list``
  - List all httptrigger(router): ``fission httptrigger list``
  - Openup log console for a function: ``fission fn log -f --name <function-name>``